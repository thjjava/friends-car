<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sttri.dao.ShopBusinessMapper" >
  <resultMap id="BaseResultMap" type="com.sttri.entity.ShopBusiness" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="shop_id" property="shopId" jdbcType="INTEGER" />
    <result column="business_type" property="businessType" jdbcType="INTEGER" />
    <result column="price_low" property="priceLow" jdbcType="DECIMAL" />
    <result column="price_rule" property="priceRule" jdbcType="VARCHAR" />
    <result column="car_price" property="carPrice" jdbcType="DECIMAL" />
    <result column="suv_price" property="suvPrice" jdbcType="DECIMAL" />
    <result column="business_desc" property="businessDesc" jdbcType="VARCHAR" />
    <result column="price_desc" property="priceDesc" jdbcType="VARCHAR" />
    <result column="addtime" property="addtime" jdbcType="TIMESTAMP" />
    <result column="edittime" property="edittime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, shop_id, business_type, price_low, price_rule, car_price, suv_price, business_desc, 
    price_desc, addtime, edittime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sttri.entity.ShopBusinessCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from shop_business
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from shop_business
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from shop_business
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sttri.entity.ShopBusinessCriteria" >
    delete from shop_business
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sttri.entity.ShopBusiness" >
    insert into shop_business (id, shop_id, business_type, 
      price_low, price_rule, car_price, 
      suv_price, business_desc, price_desc, 
      addtime, edittime)
    values (#{id,jdbcType=INTEGER}, #{shopId,jdbcType=INTEGER}, #{businessType,jdbcType=INTEGER}, 
      #{priceLow,jdbcType=DECIMAL}, #{priceRule,jdbcType=VARCHAR}, #{carPrice,jdbcType=DECIMAL}, 
      #{suvPrice,jdbcType=DECIMAL}, #{businessDesc,jdbcType=VARCHAR}, #{priceDesc,jdbcType=VARCHAR}, 
      #{addtime,jdbcType=TIMESTAMP}, #{edittime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sttri.entity.ShopBusiness" >
    insert into shop_business
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="businessType != null" >
        business_type,
      </if>
      <if test="priceLow != null" >
        price_low,
      </if>
      <if test="priceRule != null" >
        price_rule,
      </if>
      <if test="carPrice != null" >
        car_price,
      </if>
      <if test="suvPrice != null" >
        suv_price,
      </if>
      <if test="businessDesc != null" >
        business_desc,
      </if>
      <if test="priceDesc != null" >
        price_desc,
      </if>
      <if test="addtime != null" >
        addtime,
      </if>
      <if test="edittime != null" >
        edittime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="businessType != null" >
        #{businessType,jdbcType=INTEGER},
      </if>
      <if test="priceLow != null" >
        #{priceLow,jdbcType=DECIMAL},
      </if>
      <if test="priceRule != null" >
        #{priceRule,jdbcType=VARCHAR},
      </if>
      <if test="carPrice != null" >
        #{carPrice,jdbcType=DECIMAL},
      </if>
      <if test="suvPrice != null" >
        #{suvPrice,jdbcType=DECIMAL},
      </if>
      <if test="businessDesc != null" >
        #{businessDesc,jdbcType=VARCHAR},
      </if>
      <if test="priceDesc != null" >
        #{priceDesc,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="edittime != null" >
        #{edittime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sttri.entity.ShopBusinessCriteria" resultType="java.lang.Integer" >
    select count(*) from shop_business
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update shop_business
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.shopId != null" >
        shop_id = #{record.shopId,jdbcType=INTEGER},
      </if>
      <if test="record.businessType != null" >
        business_type = #{record.businessType,jdbcType=INTEGER},
      </if>
      <if test="record.priceLow != null" >
        price_low = #{record.priceLow,jdbcType=DECIMAL},
      </if>
      <if test="record.priceRule != null" >
        price_rule = #{record.priceRule,jdbcType=VARCHAR},
      </if>
      <if test="record.carPrice != null" >
        car_price = #{record.carPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.suvPrice != null" >
        suv_price = #{record.suvPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.businessDesc != null" >
        business_desc = #{record.businessDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.priceDesc != null" >
        price_desc = #{record.priceDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.addtime != null" >
        addtime = #{record.addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.edittime != null" >
        edittime = #{record.edittime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update shop_business
    set id = #{record.id,jdbcType=INTEGER},
      shop_id = #{record.shopId,jdbcType=INTEGER},
      business_type = #{record.businessType,jdbcType=INTEGER},
      price_low = #{record.priceLow,jdbcType=DECIMAL},
      price_rule = #{record.priceRule,jdbcType=VARCHAR},
      car_price = #{record.carPrice,jdbcType=DECIMAL},
      suv_price = #{record.suvPrice,jdbcType=DECIMAL},
      business_desc = #{record.businessDesc,jdbcType=VARCHAR},
      price_desc = #{record.priceDesc,jdbcType=VARCHAR},
      addtime = #{record.addtime,jdbcType=TIMESTAMP},
      edittime = #{record.edittime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sttri.entity.ShopBusiness" >
    update shop_business
    <set >
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="businessType != null" >
        business_type = #{businessType,jdbcType=INTEGER},
      </if>
      <if test="priceLow != null" >
        price_low = #{priceLow,jdbcType=DECIMAL},
      </if>
      <if test="priceRule != null" >
        price_rule = #{priceRule,jdbcType=VARCHAR},
      </if>
      <if test="carPrice != null" >
        car_price = #{carPrice,jdbcType=DECIMAL},
      </if>
      <if test="suvPrice != null" >
        suv_price = #{suvPrice,jdbcType=DECIMAL},
      </if>
      <if test="businessDesc != null" >
        business_desc = #{businessDesc,jdbcType=VARCHAR},
      </if>
      <if test="priceDesc != null" >
        price_desc = #{priceDesc,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="edittime != null" >
        edittime = #{edittime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sttri.entity.ShopBusiness" >
    update shop_business
    set shop_id = #{shopId,jdbcType=INTEGER},
      business_type = #{businessType,jdbcType=INTEGER},
      price_low = #{priceLow,jdbcType=DECIMAL},
      price_rule = #{priceRule,jdbcType=VARCHAR},
      car_price = #{carPrice,jdbcType=DECIMAL},
      suv_price = #{suvPrice,jdbcType=DECIMAL},
      business_desc = #{businessDesc,jdbcType=VARCHAR},
      price_desc = #{priceDesc,jdbcType=VARCHAR},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      edittime = #{edittime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>