<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sttri.dao.OrderCommentMapper" >
  <resultMap id="BaseResultMap" type="com.sttri.entity.OrderComment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="shop_id" property="shopId" jdbcType="INTEGER" />
    <result column="business_type" property="businessType" jdbcType="INTEGER" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
    <result column="service_level" property="serviceLevel" jdbcType="INTEGER" />
    <result column="wait_level" property="waitLevel" jdbcType="INTEGER" />
    <result column="attitude_level" property="attitudeLevel" jdbcType="INTEGER" />
    <result column="quality_level" property="qualityLevel" jdbcType="INTEGER" />
    <result column="timelen_level" property="timelenLevel" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="reply" property="reply" jdbcType="VARCHAR" />
    <result column="next_service_advice" property="nextServiceAdvice" jdbcType="VARCHAR" />
    <result column="comment_time" property="commentTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, order_id, shop_id, business_type, flag, service_level, wait_level, attitude_level, 
    quality_level, timelen_level, content, reply, next_service_advice, comment_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sttri.entity.OrderCommentCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sttri.entity.OrderCommentCriteria" >
    delete from order_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sttri.entity.OrderComment" >
    insert into order_comment (id, user_id, order_id, 
      shop_id, business_type, flag, 
      service_level, wait_level, attitude_level, 
      quality_level, timelen_level, content, 
      reply, next_service_advice, comment_time
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, 
      #{shopId,jdbcType=INTEGER}, #{businessType,jdbcType=INTEGER}, #{flag,jdbcType=INTEGER}, 
      #{serviceLevel,jdbcType=INTEGER}, #{waitLevel,jdbcType=INTEGER}, #{attitudeLevel,jdbcType=INTEGER}, 
      #{qualityLevel,jdbcType=INTEGER}, #{timelenLevel,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{reply,jdbcType=VARCHAR}, #{nextServiceAdvice,jdbcType=VARCHAR}, #{commentTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sttri.entity.OrderComment" >
    insert into order_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="businessType != null" >
        business_type,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="serviceLevel != null" >
        service_level,
      </if>
      <if test="waitLevel != null" >
        wait_level,
      </if>
      <if test="attitudeLevel != null" >
        attitude_level,
      </if>
      <if test="qualityLevel != null" >
        quality_level,
      </if>
      <if test="timelenLevel != null" >
        timelen_level,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="reply != null" >
        reply,
      </if>
      <if test="nextServiceAdvice != null" >
        next_service_advice,
      </if>
      <if test="commentTime != null" >
        comment_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="businessType != null" >
        #{businessType,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="serviceLevel != null" >
        #{serviceLevel,jdbcType=INTEGER},
      </if>
      <if test="waitLevel != null" >
        #{waitLevel,jdbcType=INTEGER},
      </if>
      <if test="attitudeLevel != null" >
        #{attitudeLevel,jdbcType=INTEGER},
      </if>
      <if test="qualityLevel != null" >
        #{qualityLevel,jdbcType=INTEGER},
      </if>
      <if test="timelenLevel != null" >
        #{timelenLevel,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="reply != null" >
        #{reply,jdbcType=VARCHAR},
      </if>
      <if test="nextServiceAdvice != null" >
        #{nextServiceAdvice,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null" >
        #{commentTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sttri.entity.OrderCommentCriteria" resultType="java.lang.Integer" >
    select count(*) from order_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order_comment
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.shopId != null" >
        shop_id = #{record.shopId,jdbcType=INTEGER},
      </if>
      <if test="record.businessType != null" >
        business_type = #{record.businessType,jdbcType=INTEGER},
      </if>
      <if test="record.flag != null" >
        flag = #{record.flag,jdbcType=INTEGER},
      </if>
      <if test="record.serviceLevel != null" >
        service_level = #{record.serviceLevel,jdbcType=INTEGER},
      </if>
      <if test="record.waitLevel != null" >
        wait_level = #{record.waitLevel,jdbcType=INTEGER},
      </if>
      <if test="record.attitudeLevel != null" >
        attitude_level = #{record.attitudeLevel,jdbcType=INTEGER},
      </if>
      <if test="record.qualityLevel != null" >
        quality_level = #{record.qualityLevel,jdbcType=INTEGER},
      </if>
      <if test="record.timelenLevel != null" >
        timelen_level = #{record.timelenLevel,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.reply != null" >
        reply = #{record.reply,jdbcType=VARCHAR},
      </if>
      <if test="record.nextServiceAdvice != null" >
        next_service_advice = #{record.nextServiceAdvice,jdbcType=VARCHAR},
      </if>
      <if test="record.commentTime != null" >
        comment_time = #{record.commentTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order_comment
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      shop_id = #{record.shopId,jdbcType=INTEGER},
      business_type = #{record.businessType,jdbcType=INTEGER},
      flag = #{record.flag,jdbcType=INTEGER},
      service_level = #{record.serviceLevel,jdbcType=INTEGER},
      wait_level = #{record.waitLevel,jdbcType=INTEGER},
      attitude_level = #{record.attitudeLevel,jdbcType=INTEGER},
      quality_level = #{record.qualityLevel,jdbcType=INTEGER},
      timelen_level = #{record.timelenLevel,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      reply = #{record.reply,jdbcType=VARCHAR},
      next_service_advice = #{record.nextServiceAdvice,jdbcType=VARCHAR},
      comment_time = #{record.commentTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sttri.entity.OrderComment" >
    update order_comment
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="shopId != null" >
        shop_id = #{shopId,jdbcType=INTEGER},
      </if>
      <if test="businessType != null" >
        business_type = #{businessType,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="serviceLevel != null" >
        service_level = #{serviceLevel,jdbcType=INTEGER},
      </if>
      <if test="waitLevel != null" >
        wait_level = #{waitLevel,jdbcType=INTEGER},
      </if>
      <if test="attitudeLevel != null" >
        attitude_level = #{attitudeLevel,jdbcType=INTEGER},
      </if>
      <if test="qualityLevel != null" >
        quality_level = #{qualityLevel,jdbcType=INTEGER},
      </if>
      <if test="timelenLevel != null" >
        timelen_level = #{timelenLevel,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="reply != null" >
        reply = #{reply,jdbcType=VARCHAR},
      </if>
      <if test="nextServiceAdvice != null" >
        next_service_advice = #{nextServiceAdvice,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null" >
        comment_time = #{commentTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sttri.entity.OrderComment" >
    update order_comment
    set user_id = #{userId,jdbcType=INTEGER},
      order_id = #{orderId,jdbcType=INTEGER},
      shop_id = #{shopId,jdbcType=INTEGER},
      business_type = #{businessType,jdbcType=INTEGER},
      flag = #{flag,jdbcType=INTEGER},
      service_level = #{serviceLevel,jdbcType=INTEGER},
      wait_level = #{waitLevel,jdbcType=INTEGER},
      attitude_level = #{attitudeLevel,jdbcType=INTEGER},
      quality_level = #{qualityLevel,jdbcType=INTEGER},
      timelen_level = #{timelenLevel,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      reply = #{reply,jdbcType=VARCHAR},
      next_service_advice = #{nextServiceAdvice,jdbcType=VARCHAR},
      comment_time = #{commentTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>